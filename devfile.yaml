#
# Copyright (c) 2019 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at:
#
#     https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#
schemaVersion: 2.1.0
metadata:
  generateName: jkube-
projects:
  - git:
      remotes:
        origin: 'https://github.com/eclipse/jkube.git'
    name: jkube
components:
  - container:
      args:
        - sh
        - '-c'
        - '${PLUGIN_REMOTE_ENDPOINT_EXECUTABLE}'
      endpoints:
        - attributes:
            public: 'false'
          exposure: internal
          name: debug
          protocol: http
          targetPort: 8000
      env:
        - name: MAVEN_CONFIG
          value: ''
        - name: MAVEN_OPTS
          value: '-XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/user'
        - name: JAVA_OPTS
          value: '-XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom'
        - name: JAVA_TOOL_OPTIONS
          value: '-XX:MaxRAMPercentage=50 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom'
        - name: PLUGIN_REMOTE_ENDPOINT_EXECUTABLE
          value: /remote-endpoint/plugin-remote-endpoint
        - name: THEIA_PLUGINS
          value: 'local-dir:///plugins/sidecars/jkube-dev'
      image: 'quay.io/sunix/jkube-dev:latest'
      memoryLimit: 2Gi
      mountSources: true
      sourceMapping: /projects
      volumeMounts:
        - name: m2
          path: /home/user/.m2
        - name: www
          path: /var/www/html
        - name: kube
          path: /home/user/.kube
        - name: remote-endpoint
          path: /remote-endpoint
        - name: plugins
          path: /plugins
    name: jkube-dev
  - container:
      endpoints:
        - attributes:
            public: 'true'
          exposure: public
          name: httpd
          protocol: http
          targetPort: 8080
      image: 'quay.io/centos7/httpd-24-centos7:latest'
      memoryLimit: 64Mi
      mountSources: true
      sourceMapping: /projects
      volumeMounts:
        - name: www
          path: /var/www/html
    name: jkube-doc-httpd
  - container:
      image: 'quay.io/sunix/surge.sh:latest'
      memoryLimit: 64Mi
      sourceMapping: /projects
      volumeMounts:
        - name: www
          path: /var/www/html
    name: surgesh
  - name: m2
    volume: {}
  - name: www
    volume: {}
  - name: kube
    volume: {}
commands:
  - exec:
      commandLine: mvn clean install
      component: jkube-dev
      label: build all
      workingDir: '${PROJECTS_ROOT}/jkube'
    id: build-all
  - exec:
      commandLine: mvn clean install -Dmaven.test.skip -DskipTests
      component: jkube-dev
      label: build all skipTests
      workingDir: '${PROJECTS_ROOT}/jkube'
    id: build-all-skiptests
  - exec:
      commandLine: |
        baseFolder=${workspaceFolder};
        currentProject=${workspaceFolder};
        currentFile=${file};
        for projectPath in $(mvn -q --also-make exec:exec -Dexec.executable="pwd");
        do
          if [ -z "${currentFile##*$projectPath*}" -a -z "${projectPath##*$currentProject*}" ];
          then
            currentProject=$projectPath;
          fi;
        done
        mvn -amd -pl ${currentProject#$baseFolder} clean install -Dmaven.test.skip
      component: jkube-dev
      label: build current project with all dependent modules
      workingDir: '${workspaceFolder}'
    id: build-current-project-with-all-dependent-modules
  - exec:
      commandLine: mvn clean -Phtml package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
      component: jkube-dev
      label: doc-build kubernetes-maven-plugin
      workingDir: '${PROJECTS_ROOT}/jkube/kubernetes-maven-plugin/doc'
    id: doc-build-kubernetes-maven-plugin
  - exec:
      commandLine: mvn clean -Pdoc-watch package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
      component: jkube-dev
      label: doc-watch kubernetes-maven-plugin
      workingDir: '${PROJECTS_ROOT}/jkube/kubernetes-maven-plugin/doc'
    id: doc-watch-kubernetes-maven-plugin
  - exec:
      commandLine: mvn clean -Phtml package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
      component: jkube-dev
      label: doc-build gradle-plugin
      workingDir: '${PROJECTS_ROOT}/jkube/gradle-plugin/doc'
    id: doc-build-gradle-plugin
  - exec:
      commandLine: mvn clean -Pdoc-watch package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
      component: jkube-dev
      label: doc-watch gradle-plugin
      workingDir: '${PROJECTS_ROOT}/jkube/gradle-plugin/doc'
    id: doc-watch-gradle-plugin
  - exec:
      commandLine: mvn clean -Phtml package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
      component: jkube-dev
      label: doc-build jkube-kit
      workingDir: '${PROJECTS_ROOT}/jkube/jkube-kit/doc'
    id: doc-build-jkube-kit
  - exec:
      commandLine: mvn clean -Pdoc-watch package -Dasciidoctor.outputHtmlDirectory='/var/www/html'
      component: jkube-dev
      label: doc-watch jkube-kit
      workingDir: '${PROJECTS_ROOT}/jkube/jkube-kit/doc'
    id: doc-watch-jkube-kit
  - exec:
      commandLine: |
        while [ ! -f pom.xml ] && [ "$(exec pwd)" != / ]; do cd ..; done
        /usr/share/maven/bin/mvnDebug k8s:build -Djkube.build.strategy=jib -Djkube.version=1.6.0-SNAPSHOT
      component: jkube-dev
      label: 'run mvnDebug k8s:build quickstart/current'
      workingDir: '${fileDirname}'
    id: run-mvndebug-ksbuild-quickstartcurrent
  - exec:
      commandLine: |
        while [ ! -f pom.xml ] && [ "$(exec pwd)" != / ]; do cd ..; done
        mvn k8s:build -Djkube.build.strategy=jib -Djkube.version=1.6.0-SNAPSHOT
      component: jkube-dev
      label: 'run mvn k8s:build quickstart/current'
      workingDir: '${fileDirname}'
    id: run-mvn-ksbuild-quickstartcurrent
  - exec:
      commandLine: |
        while [ ! -f build.gradle ] && [ "$(exec pwd)" != / ]; do cd ..; done
        ./gradlew build k8sBuild -Djkube.build.strategy=jib -Dorg.gradle.debug=true
      component: jkube-dev
      label: run gradleDebug k8sBuild quickstart/current
      workingDir: '${fileDirname}'
    id: run-gradledebug-ksbuild-quickstartcurrent
  - exec:
      commandLine: |
        while [ ! -f build.gradle ] && [ "$(exec pwd)" != / ]; do cd ..; done
        ./gradlew build k8sBuild -Djkube.build.strategy=jib
      component: jkube-dev
      label: 'run gradle k8s:build quickstart/current'
      workingDir: '${fileDirname}'
    id: run-gradle-ksbuild-quickstartcurrent
  - exec:
      commandLine: |
        while [ ! -f build.gradle ] && [ "$(exec pwd)" != / ]; do cd ..; done
        ./gradlew build ocBuild ocResource ocApply -Dorg.gradle.debug=true
      component: jkube-dev
      label: run gradleDebug ocBuild ocResource ocApply quickstart/current
      workingDir: '${fileDirname}'
    id: run-gradledebug-ocbuild-resource-apply-quickstartcurrent
  - exec:
      commandLine: |
        while [ ! -f build.gradle ] && [ "$(exec pwd)" != / ]; do cd ..; done
        ./gradlew build ocBuild ocResource ocApply --stacktrace
      component: jkube-dev
      label: run gradle ocBuild ocResource ocApply quickstart/current
      workingDir: '${fileDirname}'
    id: run-gradle-ocbuild-resource-apply-quickstartcurrent
  - exec:
      commandLine: 'surge ./ "jkubedoc-$CHE_WORKSPACE_NAMESPACE-$CHE_WORKSPACE_NAME.surge.sh" && echo "Checkout the publised JKube doc at https://jkubedoc-$CHE_WORKSPACE_NAMESPACE-$CHE_WORKSPACE_NAME.surge.sh/"'
      component: surgesh
      label: doc-publish to surge.sh
      workingDir: /var/www/html
    id: doc-publish-to-surgesh
